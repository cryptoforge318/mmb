name: Rust

on: [pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: install libudev-dev
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev-dev
      - uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: install libudev-dev
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev-dev
      - uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: cache cargo artifacts
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./target/debug
          key: cargo-clippy-${{ matrix.version }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-clippy-${{ matrix.version }}-

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
          override: true

      - name: install libudev-dev
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev-dev

      - name: clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  web:
    name: Web Check & Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies & Build
        run: |
          cd visualization/web
          npm install --no-audit
          npm -g install eslint
          eslint src/
          npm run build
